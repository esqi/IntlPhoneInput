// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        maven { url 'https://maven.google.com' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.7.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven-publish'
    repositories {
        google()
        maven { url 'https://maven.google.com' }
        jcenter()
        mavenCentral()
    }
    ext {
        groupId = 'net.rimoto'
        versionId = '2.0.0'
        gitProjectUrl = "https://github.com/esqi/IntlPhoneInput"
        gitUrl = "https://github.com/esqi/IntlPhoneInput.git"
    }

    group = groupId  // Maven Group ID for the artifact
    version = versionId
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

artifactoryPublish.skip = true

project('demo') {
    artifactoryPublish.dependsOn('build')
    publishing {
        publications {
            app(MavenPublication) {
                groupId = group
                artifactId = project.getName()
                version = "${currentVersion}"

                artifact("$buildDir/outputs/apk/release/${project.getName()}-release-unsigned.apk")
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.app)
    }
}

project('intlphoneinput') {
    artifactoryPublish.dependsOn('build')
    publishing {
        publications {
            aar(MavenPublication) {
                groupId = group
                artifactId = project.getName()
                version = "${currentVersion}"
                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.aar)
    }
}

artifactory {
    clientConfig.setIncludeEnvVars(true)
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new Date().toString())

    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = "${artifactory_repo}"
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            publishPom = true // Publish generated POM files to Artifactory (true by default)
        }
    }
}